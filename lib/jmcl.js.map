{"version":3,"file":"jmcl.js","sources":["../src/mcarg.ts","../src/promise.ts","../src/version.ts","../src/util.ts","../src/user.ts","../src/dirs.ts","../src/launcher.ts","../src/logout.ts","../src/log.ts","../src/mcenv.ts"],"sourcesContent":["export class MCArg {\n    argv: {[s: string]: string} = {};\n    constructor(public argTemp: string){}\n    arg(name: string, v: string){\n        this.argv[name] = v;\n        return this;\n    }\n    toString(){\n        var ret = this.argTemp;\n        for(var name in this.argv){\n            ret = ret.replace('${' + name + '}', this.argv[name]);\n        }\n        return ret;\n    }\n    \n}\n","import * as fs from 'fs';\nimport * as cpc from 'child_process';\nimport * as https from 'https';\nimport * as readline from 'readline';\nimport { Writable } from 'stream';\n\nexport function pass<T>(arg): Promise<T>{\n    return new Promise<T>(function(acc, reject){\n        acc(arg);\n    });\n}\nexport function reject<T>(reason: T): PromiseLike<any>{\n    return new Promise(function(acc, reject){\n        reject(reason);\n    });\n}\nexport function fileExists(fn): Promise<boolean>{\n    return new Promise(function(acc, reject){\n        fs.exists(fn, function(exi){\n            acc(exi);\n        });\n    }) as Promise<boolean>;\n}\nexport function mkdir(path, mask){\n    return new Promise(function(acc, rej){\n        fs.mkdir(path, mask, function(err){\n            err ? rej(err) : acc();\n        });\n    });\n}\nexport function mkdirIfNotExists(path, mask){\n    return fileExists(path)\n        .then(function(exi){\n            if(!exi){\n                return mkdir(path, mask);\n            }\n        });\n}\nexport function readFile(fn): Promise<string>{\n    return new Promise(function(acc, reject){\n        fs.readFile(fn, function(err, data){\n            err ? reject(err) : acc(data.toString());\n        });\n    }) as Promise<string>;\n}\nexport function writeFile(fn, s){\n    return new Promise(function(acc, reject){\n        fs.writeFile(fn, s, function(err){\n            err ? reject(err) : acc();\n        });\n    });\n}\nexport function exec(cmd: string, stdout, stderr){\n    return new Promise(function(acc, reject){\n        var pr = cpc.exec(cmd, function(err, stdout, stderr){\n            err ? reject(err) : acc();\n        });\n        pr.stdout.pipe(stdout);\n        pr.stderr.pipe(stderr);\n    });\n}\nexport interface AjaxOptions {\n    host: string;\n    port: number;\n    path: string;\n    method: string;\n    headers: {[s: string]: string};\n    body?: string;\n}\nexport function ajax(opt: AjaxOptions): Promise<string>{\n    var reqOpt = {\n        host: opt.host,\n        port: opt.port,\n        path: opt.path,\n        method: opt.method,\n        headers : opt.headers\n    };\n    return new Promise(function(acc, rej){\n        var data = '';\n        var req = https.request(opt, function(res){\n            res.setEncoding('utf-8');\n            res.on('data', function(d){\n                data += d;\n            });\n            res.on('end', function(){\n                acc(data);\n            });\n        });\n        req.on('error', function(e){\n            rej(e);\n        });\n        opt.body && req.write(opt.body);\n        req.end();\n    }) as Promise<string>;\n}\nexport function httpsGet(host: string, path: string): Promise<string>{\n    return ajax({\n        host,\n        path,\n        port: 443,\n        method: 'GET',\n        headers: {}\n    });\n}\nexport function httpsPost(host: string, path: string, data: any): Promise<string>{\n    var postBody = JSON.stringify(data);\n    return ajax({\n        host,\n        path,\n        port: 443,\n        method: 'POST',\n        headers : {\n            'Content-Type': 'application/json',\n            'Content-Length': String(postBody.length)\n        },\n        body: postBody\n    });\n}\nexport function input(question: string, hidden: boolean = false): Promise<string>{\n    var mutableStdout = new Writable({\n        write(chunk, encoding, callback) {\n            if (muted)\n                process.stdout.write(chunk as string, encoding);\n            callback();\n        }\n    });\n    var muted = true;\n    var rl = readline.createInterface({\n        input: process.stdin,\n        output: hidden ? mutableStdout : process.stdout,\n        terminal: true\n    });\n    return new Promise(function(acc, rej){\n        muted = true;\n        rl.question(question, function(answer){\n            console.log('');\n            rl.close();\n            acc(answer);\n        });\n        muted = false;\n    }) as Promise<string>;\n}\n","import * as fs from 'fs';\nimport { Context, MCConfig } from './mcenv.js';\nimport { MCArg } from './mcarg.js';\nimport * as p from './promise';\n\nclass VersionManager {\n    versions: {[v: string]: Version} = {};\n    constructor(public ctx: Context){}\n    async getVersion(vname: string): Promise<Version>{\n        var ret = this.versions[vname];\n        var cela = this;\n        if(!ret){\n            var jsonPath = cela.ctx.getVersionDir(vname) + '/' + vname + '.json';\n            ret = cela.versions[vname] = new Version(cela, vname, JSON.parse(await p.readFile(jsonPath)));\n        }\n        return ret;\n    }\n}\ninterface LibraryData {\n    name: string;\n    natives: {[os: string]: string};\n    \n}\ninterface VersionData {\n    libraries: { name: string }[];\n    mainClass: string;\n    minecraftArguments: string;\n    assets: string;\n    type: string;\n\n}\nclass Version {\n    constructor(public mgr: VersionManager, public vname: string, public versionJson: VersionData){}\n    getJars(): string[]{\n        var libdir = this.mgr.ctx.getMCRoot() + '/libraries';\n        var ret: string[] = [];\n        for(var lib of this.versionJson.libraries){\n            var name = lib.name;\n            var parts = name.split(':');\n            var pkg = parts[0].replace(/\\./g, \"/\");\n            var clazz = parts[1];\n            var classv = parts[2];\n            \n            ret.push(\n                [libdir, pkg, clazz, classv, clazz + '-' + classv + '.jar'].join('/')\n            );\n        }\n        //todo: inherits from\n        return ret;\n    }\n    getNativeDir(){\n        return this.mgr.ctx.getVersionDir(this.vname) + '/' + this.vname + '-natives/';\n    }\n    getMainClass (){\n        return this.versionJson.mainClass;\n    }\n    getJarName(){\n        return this.mgr.ctx.getVersionDir(this.vname) + '/' + this.vname + '.jar';\n    }\n    getArgs(): MCArg{\n        var arg = new MCArg(this.versionJson.minecraftArguments);\n        var env = this.mgr.ctx;\n        return arg\n                .arg('version_name', this.vname)\n                .arg('game_directory', env.getMCRoot())\n                .arg('assets_root', env.getMCRoot() + '/assets')\n                .arg('assets_index_name', this.versionJson.assets)\n                .arg('version_type', this.versionJson.type);\n    }\n}\n\ninterface VersionManifest {\n    latest: { snapshot: string, release: string },\n    versions: { id: string, type: string, time:string, releaseTime: string, url: string }[]\n}\nexport async function getVersionManifest(config: MCConfig){\n    return JSON.parse(await p.httpsGet(config.launcherMetaURL, '/mc/game/version_manifest.json')) as VersionManifest;\n}\n\nexport { VersionManager }","export function randHex(len){\n    var ret = '';\n    while(len --> 0){\n        ret += (Math.round((Math.random() * 100)) % 16).toString(16);\n    }\n    return ret;\n}\n","import { Context } from './mcenv';\nimport { randHex } from './util';\nimport * as p from './promise';\nimport { MCArg } from './mcarg';\n\nconst authServerInfo = {\n    host: 'authserver.mojang.com',\n    validate: '/validate',\n    login: '/authenticate',\n    refresh: '/refresh',\n    invalidate: '/invalidate',\n    logout: '/signout'\n};\nexport class UserManager{\n    users: {[s: string]: MojangUser} = {};\n    saveFileName = 'users.json';\n    constructor(public ctx: Context){}\n    async loadFromFile(){\n        var fn = this.ctx.getLauncherDir() + '/' + this.saveFileName;\n        var cela = this;\n        if(await p.fileExists(fn)){\n            cela.ctx.log.i('user file exists, reading');\n            var us = JSON.parse(await p.readFile(fn)) as {[s: string]: MojangUserData};\n            for(var name in us){\n                var u = us[name];\n                cela.users[name] = new MojangUser(u);\n            }\n            cela.ctx.log.i('done loading users');\n        }\n        else {\n            cela.ctx.log.i('user file not exists, skipping');\n        }\n        return true;\n    }\n    async save(){\n        var fn = this.ctx.getLauncherDir() + '/' + this.saveFileName;\n        var log = this.ctx.log;\n        await p.writeFile(fn, JSON.stringify(this.users));\n        log.v('user file saved');\n        return true;\n    }\n    legacyUser(uname: string){\n        // legacy users neednt be saved.\n        return new LegacyUser(uname);\n    }\n    mojangUser(email: string): MojangUser{\n        return this.users[email] || new MojangUser({email: email});\n    }\n    getUser(email: string): MojangUser{\n        return this.users[email];\n    }\n    async addMojangUser(u: MojangUser){\n        this.users[u.email] = u;\n        return this.save();\n    }\n    async logoutUser(u: MojangUser, getPass: () => Promise<string>){\n        async function logout2(pass: string){\n            var res = await p.httpsPost(authServerInfo.host, authServerInfo.logout, {\n                username: u.email,\n                password: pass\n            });\n            if(res !== ''){\n                throw JSON.parse(res).errorMessage;\n            }\n            return true;\n        }\n        var cela = this;\n        var log = this.ctx.log;\n        if(await u.validAndRefresh(this.ctx)){\n            log.i('user is valid, logging out');\n            await u.logout();\n            log.i('successfully logged out');\n            delete cela.users[u.email];\n        }\n        else {\n            log.i('user is not valid, logging out using password');\n            await logout2(await getPass());\n            log.i('successfully logged out');\n            delete cela.users[u.email];\n        }\n        return cela.save();\n    }\n}\n\nexport abstract class User {\n    abstract getType(): string;\n    abstract getName(): string;\n    abstract getUUID(): string;\n    abstract getToken(): string;\n    initArg(arg: MCArg){\n        arg\n            .arg('user_type', this.getType())\n            .arg('auth_player_name', this.getName())\n            .arg('auth_uuid', this.getUUID())\n            .arg('auth_access_token', this.getToken())\n    }\n}\n\nclass LegacyUser extends User{\n    constructor(public name: string){ super(); }\n    getType(){ return 'legacy'; }\n    getName(){ return this.name; }\n    getUUID(){ return '{}'; }\n    getToken(){ return '{}'; }\n}\ninterface UserProfile {\n    id: string;\n    name: string;\n}\ninterface MojangUserData {\n    email: string;\n    accessToken?: string;\n    clientToken?: string;\n    profiles?: UserProfile[];\n    selectedProfile?: UserProfile;\n    user?: {id: string, properties: {[s: string]: string}};\n}\nclass MojangUser extends User{\n    email: string;\n    accessToken: string;\n    clientToken: string;\n    profiles: UserProfile[];\n    selectedProfile: UserProfile;\n    user: {id: string, properties: {[s: string]: string}};\n\n    constructor(u: MojangUserData){\n        super();\n        this.email = u.email;\n        this.accessToken = u.accessToken || '';\n        this.clientToken = u.clientToken || randHex(32);\n    \n        this.profiles = u.profiles || [];\n        this.selectedProfile = u.selectedProfile || null;\n    \n        this.user = u.user || {\n            id: '',\n            properties: {}\n        };\n    }\n    getType(){ return 'mojang'; }\n    getName(){ return this.selectedProfile.name; }\n    getUUID(){ return this.selectedProfile.id; }\n    getToken(){ return this.accessToken; }\n    needsLogin(){ return this.accessToken === ''; }\n    async login(pass: string, version: string = '1.0'){\n        var cela = this;\n        var resRaw = await p.httpsPost(authServerInfo.host, authServerInfo.login, {\n            username: this.email,\n            password: pass,\n            clientToken: this.clientToken,\n            agent: { name: 'Minecraft', version },\n            requestUser: true\n        });\n        var res = JSON.parse(resRaw);\n        if(res.error){\n            throw 'logging failed: ' + res.errorMessage;\n        }\n        else {\n            if(res.clientToken !== cela.clientToken){\n                throw 'client token changed, which shouldnt happen';\n            }\n            cela.accessToken = res.accessToken;\n            cela.profiles = res.availableProfiles;\n            cela.selectedProfile = res.selectedProfile || res.availableProfiles[0];\n            cela.user.id = res.user.id;\n            cela.user.properties = res.user.properties;\n        }\n        return true;\n    }\n    async validate(){\n        var cela = this;\n        return '' === await p.httpsPost(authServerInfo.host, authServerInfo.validate, {\n            clientToken: this.clientToken,\n            accessToken: this.accessToken\n        });\n    }\n    async validAndRefresh(ctx: Context){\n        var log = ctx.log;\n        var cela = this;\n        if(this.needsLogin()){\n            log.i('user has not logged in');\n            return false;\n        }\n        log.i('checking user validity');\n        if(!await this.validate()){\n            log.i('user not valid, refreshing');\n            await this.refresh();\n        }\n        return true;\n    }\n    async makeValid(ctx: Context, version: string, getPass: () => Promise<string>){\n        var log = ctx.log;\n        var cela = this;\n        async function login1(){\n            var pass = await getPass();\n            log.i('logging in');\n            await cela.login(pass, version);\n            log.i('logging in successful');\n            return true;\n        }\n        if(await this.validAndRefresh(ctx)){\n            log.i('user is valid');\n        }\n        else {\n            log.i('user is invalid, login required');\n            return login1();\n        }\n        return true;\n    }\n    async refresh(){\n        var cela = this;\n        var resRaw = await p.httpsPost(authServerInfo.host, authServerInfo.refresh, {\n            clientToken: this.clientToken,\n            accessToken: this.accessToken,\n            selectedProfile: null, //this.selectedProfile,\n            requestUser: true\n        });\n\n        var res = JSON.parse(resRaw);\n        if(res.error){\n            throw res.errorMessage;\n        }\n        else {\n            cela.accessToken = res.accessToken;\n            // cela.profiles = res.availableProfiles;\n            cela.selectedProfile = res.selectedProfile;\n            cela.user.id = res.user.id;\n            cela.user.properties = res.user.properties;\n            // return true;\n        }\n        return true;\n    }\n    async logout(){\n        var res = await p.httpsPost(authServerInfo.host, authServerInfo.invalidate, {\n            accessToken: this.accessToken,\n            clientToken: this.clientToken\n        });\n        if(res === ''){\n            return null;\n        }\n        else {\n            throw JSON.parse(res).errorMessage;\n        }\n    }\n    \n}\n","import * as p from './promise';\nimport { Context } from './main';\n\nexport async function prepareDirs(ctx: Context): Promise<void>{\n    await p.mkdirIfNotExists(ctx.getMCRoot(), null);\n    await p.mkdirIfNotExists(ctx.getLauncherDir(), null);\n    return;\n}","import * as cpc from 'child_process';\nimport { VersionManager } from './version';\nimport { UserManager, User } from './user';\nimport { prepareDirs } from './dirs';\nimport * as p from './promise';\nimport { Context } from './mcenv';\n\nexport interface LaunchOption {\n    uname: string;\n    version: string;\n    legacy: boolean;\n}\nexport async function launch(ctx: Context, opt: LaunchOption){\n    if(!opt.uname){\n        throw new Error('user name not present');\n    }\n    if(!opt.version){\n        throw new Error('version not given');\n    }\n    opt.legacy = !!opt.legacy;\n    var log = ctx.log;\n    \n    async function launch1(): Promise<void>{\n        var vmgr = new VersionManager(ctx);\n        var umgr = new UserManager(ctx);\n        var user: User;\n        await prepareDirs(ctx);\n        await umgr.loadFromFile();\n        if(opt.legacy){\n            user = umgr.legacyUser(opt.uname);\n        }\n        else {\n            var user2 = umgr.mojangUser(opt.uname);\n            await user2.makeValid(ctx, opt.version, () => {\n                return ctx.readInput(`password for ${user2.email}:`, true);\n            });\n            await umgr.addMojangUser(user2);\n            user = user2;\n        }\n        var v = await vmgr.getVersion(opt.version);\n        var mcargs = v.getArgs();\n        var jars = v.getJars();\n        jars.push(v.getJarName());\n        user.initArg(mcargs);\n        \n        log.i('generating arguments');\n        var cmd = [\n            'java',\n            \"-Xincgc\",\n            '-XX:-UseAdaptiveSizePolicy',\n            '-XX:-OmitStackTraceInFastThrow',\n            '-Xmn128m',\n            '-Xmx2048M',\n            '-Djava.library.path=' + v.getNativeDir(),\n            '-Duser.home=' + ctx.config.home,\n            '-cp ' + jars.join(':'),\n            v.getMainClass(),\n            mcargs.toString()\n        ];\n    \n        log.i('launching game');\n        await p.exec(cmd.join(' '), process.stdout, process.stderr);\n        log.i('game quit');\n    }\n\n    try {\n        await launch1();\n    }\n    catch(e){\n        log.e(e);\n    }\n}","import { prepareDirs } from \"./dirs\";\nimport { UserManager } from \"./user\";\nimport { Context } from \"./main\";\n\n\nexport async function logout(ctx: Context, opts): Promise<void>{\n    var log = ctx.log;\n    var umgr = new UserManager(ctx);\n    try {\n        await prepareDirs(ctx);\n        await umgr.loadFromFile();\n        var user = umgr.mojangUser(opts.uname);\n        await umgr.logoutUser(user, () => {\n            return ctx.readInput(`password for ${user.email}:`, true);\n        });\n    }\n    catch(msg){\n        log.e(msg);\n    }\n}","export class Log {\n    constructor(public c: Console){}\n    i(s){\n        this.c.log('[jmcl/INFO] ' + s);\n    }\n    \n    v(s){\n        this.c.log('[jmcl/VERBOSE] ' + s);\n    }\n    \n    e(s){\n        this.c.log('[jmcl/ERR] ' + s);\n    }\n    \n    w(s){\n        this.c.log('[jmcl/WARN] ' + s);\n    }\n}\n","import { Log } from './log';\nimport { input } from './promise';\n\nexport interface MCConfig {\n    launcherRoot: string;\n    home: string;\n    mcRoot: string;    \n    launcherMetaURL: string;\n}\n\nexport class Context {\n    // launcherRoot = '.jmcl';\n    // home = '/home/cfy';\n    // mcRoot = '.minecraft';\n    config: MCConfig = {\n        launcherRoot: '.jmcl',\n        home: '/home/cfy',\n        mcRoot: '.minecraft',\n\n        launcherMetaURL: 'launchermeta.mojang.com'\n    };\n    log: Log;\n    constructor(public console: Console){\n        this.log = new Log(console);\n    }\n    getMCRoot(){\n        return `${this.config.home}/${this.config.mcRoot}`;   \n    }\n    getVersionDir(vname: string){\n        // return this.config.home + '/' + this.config.mcRoot + '/versions/' + vname;\n        return `${this.config.home}/${this.config.mcRoot}/versions/${vname}`;\n    }\n    getLauncherDir(){\n        // return this.config.home + '/' + this.config.mcRoot + '/' + this.config.launcherRoot;\n        return `${this.config.home}/${this.config.mcRoot}/${this.config.launcherRoot}`;\n    }\n    async readInput(q: string, hidden: boolean){\n        return input(q, hidden);\n    }\n}"],"names":["fs.exists","fs.mkdir","mkdir","fs.readFile","fs.writeFile","cpc.exec","https.request","Writable","readline.createInterface","p.readFile","p.fileExists","p.writeFile","pass","p.httpsPost","tslib_1.__extends","p.mkdirIfNotExists","p.exec"],"mappings":"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"}